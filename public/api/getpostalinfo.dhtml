#!/usr/local/bin/perl  
#!/usr/bin/perl

use CGI;
use JSON;
use HTTP::Tiny;

my ($cgiObject,
    %json_resp,
    $base_url,
    $url,
    %data,
    $http,
    $gmaps_resp,
    %gmaps_json
);

$cgiObject=new CGI;

print STDOUT $cgiObject->header('application/json');

$json_resp{'input_postal'} = $cgiObject->param('postal');

$url = 'https://maps.googleapis.com/maps/api/place/findplacefromtext/json?key=AIzaSyDxLkzb4v0-bN_e2DkXANPdzNEQVwn0nn0&inputtype=textquery&input=l4j9e9&fields=formatted_address';

$base_url = 'https://maps.googleapis.com/maps/api/place/findplacefromtext/json';

%data = (
    key => 'AIzaSyDxLkzb4v0-bN_e2DkXANPdzNEQVwn0nn0',
    inputtype => 'textquery',
    input => $json_resp{'input_postal'},
    fields => 'formatted_address'
);

sub assemble_url{
    my $bu = shift;
    my $d = shift;

    my $ret = $bu;
    my $sep = '?';

    foreach (keys %{$d}){
        $sep = '&' unless $ret eq $bu;
        $ret = $ret . $sep . $_ . '=' . $d->{$_};
    }
    return $ret;
}

$url = assemble_url($base_url, \%data);

$http = HTTP::Tiny->new();

$gmaps_resp = $http->get($url);

if ($gmaps_resp->{status} =~ /^2/) {
    $gmaps_json = decode_json($gmaps_resp->{content});
    $json_resp{req_status} = 'OK';
    $json_resp{api_status} = $gmaps_json->{status};
    if ($json_resp{api_status} eq 'OK'){
        $gmaps_json->{candidates}[0]->{formatted_address} =~ /^(.*), ([A-Z]{2}) .*, (.*)$/;
        ($json_resp{city}, $json_resp{state}, $json_resp{country}) = ($1, $2, $3);
    }
} else {
    $json_resp{req_status} = 'ERROR';
}


print encode_json \%json_resp;
